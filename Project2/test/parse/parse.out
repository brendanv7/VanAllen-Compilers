Compiling program 1...

LEXER -- Lexing program 1...
LEXER -- L_BRACE [ { ] found at (1:1)
LEXER -- R_BRACE [ } ] found at (1:2)
LEXER -- EOP [ $ ] found at (1:3)
LEXER -- Lexing complete for program 1. No errors found.

PARSER -- Parsing program 1...
PARSER -- parse()
PARSER -- parseProgram()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- Parse completed successfully.

CST for program 1:
<Program>
-<Block>
--[{]
--<StatementList>
--[}]
-[$]

Compilation complete (for now) for program 1.

-------------------------------------------
Compiling program 2...

LEXER -- Lexing program 2...
LEXER -- L_BRACE [ { ] found at (3:1)
LEXER -- L_BRACE [ { ] found at (3:2)
LEXER -- L_BRACE [ { ] found at (3:3)
LEXER -- L_BRACE [ { ] found at (3:4)
LEXER -- L_BRACE [ { ] found at (3:5)
LEXER -- L_BRACE [ { ] found at (3:6)
LEXER -- R_BRACE [ } ] found at (3:7)
LEXER -- R_BRACE [ } ] found at (3:8)
LEXER -- R_BRACE [ } ] found at (3:9)
LEXER -- R_BRACE [ } ] found at (3:10)
LEXER -- R_BRACE [ } ] found at (3:11)
LEXER -- R_BRACE [ } ] found at (3:12)
LEXER -- EOP [ $ ] found at (3:13)
LEXER -- Lexing complete for program 2. No errors found.

PARSER -- Parsing program 2...
PARSER -- parse()
PARSER -- parseProgram()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- Parse completed successfully.

CST for program 2:
<Program>
-<Block>
--[{]
--<StatementList>
---<Statement>
----<Block>
-----[{]
-----<StatementList>
------<Statement>
-------<Block>
--------[{]
--------<StatementList>
---------<Statement>
----------<Block>
-----------[{]
-----------<StatementList>
------------<Statement>
-------------<Block>
--------------[{]
--------------<StatementList>
---------------<Statement>
----------------<Block>
-----------------[{]
-----------------<StatementList>
-----------------[}]
---------------<StatementList>
--------------[}]
------------<StatementList>
-----------[}]
---------<StatementList>
--------[}]
------<StatementList>
-----[}]
---<StatementList>
--[}]
-[$]

Compilation complete (for now) for program 2.

-------------------------------------------
Compiling program 3...

LEXER -- Lexing program 3...
LEXER -- L_BRACE [ { ] found at (5:1)
LEXER -- L_BRACE [ { ] found at (5:2)
LEXER -- L_BRACE [ { ] found at (5:3)
LEXER -- L_BRACE [ { ] found at (5:4)
LEXER -- L_BRACE [ { ] found at (5:5)
LEXER -- L_BRACE [ { ] found at (5:6)
LEXER -- R_BRACE [ } ] found at (5:7)
LEXER -- R_BRACE [ } ] found at (5:8)
LEXER -- R_BRACE [ } ] found at (5:9)
LEXER -- R_BRACE [ } ] found at (5:36)
LEXER -- R_BRACE [ } ] found at (5:39)
LEXER -- R_BRACE [ } ] found at (5:40)
LEXER -- R_BRACE [ } ] found at (5:41)
LEXER -- EOP [ $ ] found at (5:42)
LEXER -- Lexing complete for program 3. No errors found.

PARSER -- Parsing program 3...
PARSER -- parse()
PARSER -- parseProgram()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- ERROR: Expected [EOP], found [R_BRACE] with value '}' at (5:41)
PARSER -- Parse failed with 1 error(s)
Compilation stopped for program 3 due to Parse error(s).

-------------------------------------------
Compiling program 4...

LEXER -- Lexing program 4...
LEXER -- L_BRACE [ { ] found at (7:1)
LEXER -- INT [ int ] found at (7:34)
LEXER -- ERROR: Unrecognized token [ @ ] at (7:40)
LEXER -- R_BRACE [ } ] found at (7:41)
LEXER -- EOP [ $ ] found at (7:42)
LEXER -- Lexing complete for program 4. Lex failed with 1 error(s).

Compilation stopped for program 4 due to Lexical error(s).

-------------------------------------------
Compiling program 5...

LEXER -- Lexing program 5...
LEXER -- L_BRACE [ { ] found at (9:1)
LEXER -- PRINT [ print ] found at (9:3)
LEXER -- L_PAREN [ ( ] found at (9:8)
LEXER -- QUOTE [ " ] found at (9:9)
LEXER -- CHAR [ h ] found at (9:10)
LEXER -- CHAR [ i ] found at (9:11)
LEXER -- SPACE [   ] found at (9:12)
LEXER -- CHAR [ t ] found at (9:13)
LEXER -- CHAR [ h ] found at (9:14)
LEXER -- CHAR [ e ] found at (9:15)
LEXER -- CHAR [ r ] found at (9:16)
LEXER -- CHAR [ e ] found at (9:17)
LEXER -- QUOTE [ " ] found at (9:18)
LEXER -- R_PAREN [ ) ] found at (9:19)
LEXER -- R_BRACE [ } ] found at (9:21)
LEXER -- EOP [ $ ] found at (9:22)
LEXER -- Lexing complete for program 5. No errors found.

PARSER -- Parsing program 5...
PARSER -- parse()
PARSER -- parseProgram()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parsePrintStatement()
PARSER -- parseExpr()
PARSER -- parseStringExpr()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseStatementList()
PARSER -- Parse completed successfully.

CST for program 5:
<Program>
-<Block>
--[{]
--<StatementList>
---<Statement>
----<PrintStatement>
-----[print]
-----[(]
-----<Expr>
------<StringExpr>
-------["]
-------<CharList>
--------[h]
--------<CharList>
---------[i]
---------<CharList>
----------[ ]
----------<CharList>
-----------[t]
-----------<CharList>
------------[h]
------------<CharList>
-------------[e]
-------------<CharList>
--------------[r]
--------------<CharList>
---------------[e]
---------------<CharList>
-------["]
-----[)]
---<StatementList>
--[}]
-[$]

Compilation complete (for now) for program 5.

-------------------------------------------
