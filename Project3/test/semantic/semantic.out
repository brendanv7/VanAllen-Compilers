Compiling program 1...

LEXER -- Lexing program 1...
LEXER -- L_BRACE [ { ] found at (2:1)
LEXER -- INT [ int ] found at (4:3)
LEXER -- CHAR [ a ] found at (4:7)
LEXER -- BOOL [ boolean ] found at (6:3)
LEXER -- CHAR [ b ] found at (6:11)
LEXER -- L_BRACE [ { ] found at (8:3)
LEXER -- STRING [ string ] found at (10:4)
LEXER -- CHAR [ c ] found at (10:11)
LEXER -- CHAR [ a ] found at (12:5)
LEXER -- ASSIGN_OP [ = ] found at (12:7)
LEXER -- DIGIT [ 5 ] found at (12:9)
LEXER -- CHAR [ b ] found at (14:5)
LEXER -- ASSIGN_OP [ = ] found at (14:7)
LEXER -- BOOL_VAL [ true ] found at (14:9)
LEXER -- CHAR [ c ] found at (16:5)
LEXER -- ASSIGN_OP [ = ] found at (16:7)
LEXER -- QUOTE [ " ] found at (16:9)
LEXER -- CHAR [ i ] found at (16:10)
LEXER -- CHAR [ n ] found at (16:11)
LEXER -- CHAR [ t ] found at (16:12)
LEXER -- CHAR [ a ] found at (16:13)
LEXER -- QUOTE [ " ] found at (16:14)
LEXER -- PRINT [ print ] found at (18:5)
LEXER -- L_PAREN [ ( ] found at (18:10)
LEXER -- CHAR [ c ] found at (18:11)
LEXER -- R_PAREN [ ) ] found at (18:12)
LEXER -- R_BRACE [ } ] found at (20:3)
LEXER -- PRINT [ print ] found at (22:2)
LEXER -- L_PAREN [ ( ] found at (22:7)
LEXER -- CHAR [ b ] found at (22:8)
LEXER -- R_PAREN [ ) ] found at (22:9)
LEXER -- PRINT [ print ] found at (24:2)
LEXER -- L_PAREN [ ( ] found at (24:7)
LEXER -- CHAR [ a ] found at (24:8)
LEXER -- R_PAREN [ ) ] found at (24:9)
LEXER -- R_BRACE [ } ] found at (26:1)
LEXER -- EOP [ $ ] found at (26:2)
LEXER -- Lexing complete for program 1. No errors found.

PARSER -- Parsing program 1...
PARSER -- parse()
PARSER -- parseProgram()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseVarDecl()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseVarDecl()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseVarDecl()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseAssignmentStatement()
PARSER -- parseId()
PARSER -- parseExpr()
PARSER -- parseIntExpr()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseAssignmentStatement()
PARSER -- parseId()
PARSER -- parseExpr()
PARSER -- parseBooleanExpr()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseAssignmentStatement()
PARSER -- parseId()
PARSER -- parseExpr()
PARSER -- parseStringExpr()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseCharList()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parsePrintStatement()
PARSER -- parseExpr()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parsePrintStatement()
PARSER -- parseExpr()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parsePrintStatement()
PARSER -- parseExpr()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- Parse completed successfully.

CST for program 1:
<Program>
-<Block>
--{
--<StatementList>
---<Statement>
----<VarDecl>
-----int
-----<Id>
------a
---<StatementList>
----<Statement>
-----<VarDecl>
------boolean
------<Id>
-------b
----<StatementList>
-----<Statement>
------<Block>
-------{
-------<StatementList>
--------<Statement>
---------<VarDecl>
----------string
----------<Id>
-----------c
--------<StatementList>
---------<Statement>
----------<AssignmentStatement>
-----------<Id>
------------a
-----------=
-----------<Expr>
------------<IntExpr>
-------------5
---------<StatementList>
----------<Statement>
-----------<AssignmentStatement>
------------<Id>
-------------b
------------=
------------<Expr>
-------------<BooleanExpr>
--------------true
----------<StatementList>
-----------<Statement>
------------<AssignmentStatement>
-------------<Id>
--------------c
-------------=
-------------<Expr>
--------------<StringExpr>
---------------"
---------------<CharList>
----------------i
----------------<CharList>
-----------------n
-----------------<CharList>
------------------t
------------------<CharList>
-------------------a
-------------------<CharList>
---------------"
-----------<StatementList>
------------<Statement>
-------------<PrintStatement>
--------------print
--------------(
--------------<Expr>
---------------<Id>
----------------c
--------------)
------------<StatementList>
-------}
-----<StatementList>
------<Statement>
-------<PrintStatement>
--------print
--------(
--------<Expr>
---------<Id>
----------b
--------)
------<StatementList>
-------<Statement>
--------<PrintStatement>
---------print
---------(
---------<Expr>
----------<Id>
-----------a
---------)
-------<StatementList>
--}
-$


AST for program 1:
<Block>
-<Variable Declaration>
--<int>
--<a>
-<Variable Declaration>
--<boolean>
--<b>
-<Block>
--<Variable Declaration>
---<string>
---<c>
--<Assignment Statement>
---<a>
---<5>
--<Assignment Statement>
---<b>
---<true>
--<Assignment Statement>
---<c>
---<"inta">
--<Print Statement>
---<c>
-<Print Statement>
--<b>
-<Print Statement>
--<a>

SEMANTIC -- Analyzing program 1...
SEMANTIC -- Semantic analysis completed successfully with 0 warning(s).

Symbol table for program 1:
ID	Type		Scope	Line	Position
<a>	<int>		0	4	7
<b>	<boolean>	0	6	11
<c>	<string>	1	10	11

Compilation complete (for now) for program 1.

-------------------------------------------

Compiling program 2...

LEXER -- Lexing program 2...
LEXER -- L_BRACE [ { ] found at (30:1)
LEXER -- INT [ int ] found at (32:2)
LEXER -- CHAR [ a ] found at (32:6)
LEXER -- L_BRACE [ { ] found at (34:2)
LEXER -- BOOL [ boolean ] found at (36:5)
LEXER -- CHAR [ b ] found at (36:13)
LEXER -- CHAR [ a ] found at (38:5)
LEXER -- ASSIGN_OP [ = ] found at (38:7)
LEXER -- DIGIT [ 1 ] found at (38:9)
LEXER -- R_BRACE [ } ] found at (40:3)
LEXER -- PRINT [ print ] found at (42:3)
LEXER -- L_PAREN [ ( ] found at (42:8)
LEXER -- CHAR [ b ] found at (42:9)
LEXER -- R_PAREN [ ) ] found at (42:10)
LEXER -- R_BRACE [ } ] found at (44:1)
LEXER -- EOP [ $ ] found at (44:2)
LEXER -- Lexing complete for program 2. No errors found.

PARSER -- Parsing program 2...
PARSER -- parse()
PARSER -- parseProgram()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseVarDecl()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseBlock()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseVarDecl()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parseAssignmentStatement()
PARSER -- parseId()
PARSER -- parseExpr()
PARSER -- parseIntExpr()
PARSER -- parseStatementList()
PARSER -- parseStatementList()
PARSER -- parseStatement()
PARSER -- parsePrintStatement()
PARSER -- parseExpr()
PARSER -- parseId()
PARSER -- parseStatementList()
PARSER -- Parse completed successfully.

CST for program 2:
<Program>
-<Block>
--{
--<StatementList>
---<Statement>
----<VarDecl>
-----int
-----<Id>
------a
---<StatementList>
----<Statement>
-----<Block>
------{
------<StatementList>
-------<Statement>
--------<VarDecl>
---------boolean
---------<Id>
----------b
-------<StatementList>
--------<Statement>
---------<AssignmentStatement>
----------<Id>
-----------a
----------=
----------<Expr>
-----------<IntExpr>
------------1
--------<StatementList>
------}
----<StatementList>
-----<Statement>
------<PrintStatement>
-------print
-------(
-------<Expr>
--------<Id>
---------b
-------)
-----<StatementList>
--}
-$


AST for program 2:
<Block>
-<Variable Declaration>
--<int>
--<a>
-<Block>
--<Variable Declaration>
---<boolean>
---<b>
--<Assignment Statement>
---<a>
---<1>
-<Print Statement>
--<b>

SEMANTIC -- Analyzing program 2...
SEMANTIC -- ERROR: Undeclared identifier <b> at (42:9)
SEMANTIC -- WARNING: Identifier <a> initialized, but never used, at (32:6)
SEMANTIC -- WARNING: Identifier <b> is declared, but never initialized, at (36:13)
SEMANTIC -- Semantic analysis failed with 1 error(s) and 2 warning(s)

Compilation stopped for program 2 due to Semantic error(s).

-------------------------------------------

